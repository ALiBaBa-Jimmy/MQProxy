// Copyright 2001-2002 Huawei Technologies Co.,Ltd. All rights reserved.

#ifndef __UTIL_CALENDAR_H__
#define __UTIL_CALENDAR_H__

#include <string>
#include <util/diam_datetime.h>
#include <util/diam_time.h>
#include <util/diam_exception.h>

class DateTimeException : public Exception
{
public:
    DateTimeException(const std::string & file, const INT32 & line,const std::string &message);
private:
    std::string _message;
};

///////////////////////////////////////////////////////////////
//	类    名 : Calendar
//	描    述 : 日期时间类，包含年、月、日、时、分、秒信息
//	功    能 :
///////////////////////////////////////////////////////////////
class Calendar
{
public:
    //*****************************************
    //月份标识，从１开始
    //*****************************************
    enum Month
    {
        Month_January = 1,
        Month_February,
        Month_March,
        Month_April,
        Month_May,
        Month_Jule,
        Month_July,
        Month_August,
        Month_September,
        Month_October,
        Month_November,
        Month_December
    };
    //*****************************************
    //星期标识，从０开始，表示星期日
    //*****************************************
    enum Week
    {
        Week_Sunday = 0,
        Week_Monday,
        Week_Tuesday,
        Week_Wednesday,
        Week_Thursday,
        Week_Friday,
        Week_Saturday
    };

    enum
    {
        Begin_Year = 1900, //struct tm.tm_year 从1900年开始
        Min_Year = 1971,
        Max_Year = 2037,
        One_Day_Sec = 86400
    };

public:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : Calenda
    //	函数功能 : 构造函数
    //	处理过程 : 默认为当前日期时间
    //	备    注 :
    //	返 回 值 :
    //	参数说明 : 无
    ///////////////////////////////////////////////////////////////
    Calendar();

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : Calenda
    //	函数功能 : 构造函数，将DateTime参数初始化日期时间
    //	备    注 :
    //	返 回 值 :
    //	参数说明 : DateTime dateTime用于初始化日期时间的参数
    ///////////////////////////////////////////////////////////////
    Calendar(const DateTime &dateTime);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : Calenda
    //	函数功能 : 构造函数，用年月日时分秒来初始化日期时间
    //	备    注 :
    //	返 回 值 :
    //	参数说明 : Int year：	年，从1970~1937
    //				 Int month：月，从1~12
    //				 Int day：	日，从1~31
    //				 Int hr:	时，从0~23
    //				 Int mi,    分，从0~59
    //				 Int sec    秒，从0~59
    ///////////////////////////////////////////////////////////////
    Calendar(INT32 year, INT32 month, INT32 day, INT32 hour, INT32 minute, INT32 second);


    ///////////////////////////////////////////////////////////////
    //	函 数 名 : Calenda
    //	函数功能 : 构造函数，将字符串按指定的格式解释，最终转化为日期时间
    //	备    注 :
    //	返 回 值 :
    //	参数说明 : const string & dateTime：用来初始化的字符串
    //				 const string & fmt：表明字符串的格式，默认为"yyyy-mm-dd hh:mi:ss"
    ///////////////////////////////////////////////////////////////
    Calendar(const std::string & dateTime, const std::string & fmt ="yyyy-mm-dd hh:mi:ss");
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : format
    //	函数功能 : 按指定的格式，将日期时间转换为字符串
    //	备    注 :
    //	返 回 值 : string
    //	参数说明 : const string & fmt：需要转换成的格式，指定为 "yyyy-mm-dd hh:mi:ss"
    ///////////////////////////////////////////////////////////////
    std::string format(const std::string & fmt = "yyyy-mm-dd hh:mi:ss") const;

public:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getYear
    //	函数功能 : 得到日期时间中的年
    //	返 回 值 : Int值可能为1970~2037
    //	参数说明 : 无
    ///////////////////////////////////////////////////////////////
    INT32 getYear() const;


    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getMonth
    //	函数功能 : 得到日期时间中的月
    //	备    注 :
    //	返 回 值 : Int，值在1~12中
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getMonth() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getDayOfMonth
    //	函数功能 : 得到日期时间中的日，在一个月中的位置
    //	备    注 :
    //	返 回 值 : Int，值在1~31中
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getDayOfMonth() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getDayOfWeek
    //	函数功能 : 得到星期几
    //	备    注 :
    //	返 回 值 : Week，参见此枚举类型的说明
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    Week getDayOfWeek() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getHour
    //	函数功能 : 得到日期时间中的小时
    //	备    注 :
    //	返 回 值 : Int，值在0~23中
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getHour() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getMinute
    //	函数功能 : 得到日期时间中的分
    //	备    注 :
    //	返 回 值 : Int，值在0~59中
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getMinute() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getSecond
    //	函数功能 : 得到日期时间中的秒
    //	备    注 :
    //	返 回 值 : Int，值在0~59中
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getSecond() const;

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : set
    //	函数功能 : 用年月日时分秒设置日期时间
    //	备    注 :
    //	返 回 值 :
    //	参数说明 : Int year：	年，从1970~1937
    //				 Int month：月，从1~12
    //				 Int day：	日，从1~31
    //				 Int hour:	时，从0~23
    //				 Int minute,   分，从0~59
    //				 Int second    秒，从0~59
    ///////////////////////////////////////////////////////////////
    void set(INT32 year, INT32 month, INT32 day, INT32 hour, INT32 minute, INT32 second);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : set
    //	函数功能 : 用年月日设置日期时间
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int year：	年，从1970~1937
    //				 Int month：月，从1~12
    //				 Int day：	日，从1~31
    ///////////////////////////////////////////////////////////////
    void set(INT32 year, INT32 month, INT32 day);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : set
    //	函数功能 : 用Time类型设置时间，Time只包含了时分秒
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Time  time_　结构参见Time.h
    ///////////////////////////////////////////////////////////////
    void set(Time  time_);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setDateTime
    //	函数功能 : 用DateTime设置日期时间
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : const DateTime &dateTime，参见DateTime结构
    ///////////////////////////////////////////////////////////////
    void setDateTime(const DateTime &dateTime);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setYear
    //	函数功能 : 设置年
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int year，值在1970~1937之间
    ///////////////////////////////////////////////////////////////
    void setYear(INT32 year);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setMonth
    //	函数功能 : 设置月
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int month　值在1~12之间
    ///////////////////////////////////////////////////////////////
    void setMonth(INT32 month);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setDayOfMonth
    //	函数功能 : 设置日
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int day　值在1~31之间
    ///////////////////////////////////////////////////////////////
    void setDayOfMonth(INT32 day);
    void setDate(INT32 day,INT32 month,INT32 year);
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setHour
    //	函数功能 : 设置时
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int hour　值在0~59之间
    ///////////////////////////////////////////////////////////////
    void setHour(INT32 hour);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setMinute
    //	函数功能 : 设置分
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int minute　值在0~59之间
    ///////////////////////////////////////////////////////////////
    void setMinute(INT32 minute);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setSecond
    //	函数功能 : 设置秒
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int second 值在0~59之间
    ///////////////////////////////////////////////////////////////
    void setSecond(INT32 second);
public:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getActualMaximumDayOfMonth
    //	函数功能 : 得到所在月的最大天数
    //	备    注 :
    //	返 回 值 : Int，在0~31之间
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    INT32 getActualMaximumDayOfMonth() const;
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getActualMaximumDayOfMonth
    //	函数功能 : 得到指定年月所在月的最大天数
    //	备    注 :
    //	返 回 值 : Int
    //	参数说明 : const Int year,所在年
    //				 Int month，所要计算的月
    ///////////////////////////////////////////////////////////////
    INT32 getActualMaximumDayOfMonth(const INT32 year, const INT32 month) const;
public:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : addSeconds
    //	函数功能 : 增加秒
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int sec
    ///////////////////////////////////////////////////////////////
    void addSeconds(INT32 sec);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : addDays
    //	函数功能 : 增加天
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int day
    ///////////////////////////////////////////////////////////////
    void addDays(INT32 day);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : addMonths
    //	函数功能 : 增加月
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int mon
    ///////////////////////////////////////////////////////////////
    void addMonths(INT32 mon);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : addYears
    //	函数功能 : 增加年
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : Int year
    ///////////////////////////////////////////////////////////////
    void addYears(INT32 year);

    std::string toString();
public:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : isLeapYear
    //	函数功能 : 判断是否为闰年
    //	备    注 :
    //	返 回 值 : boolean,是闰年返回true,否则返回false
    //	参数说明 : Int year要判断的年份
    ///////////////////////////////////////////////////////////////
    static Boolean isLeapYear(INT32 year);

    ///////////////////////////////////////////////////////////////
    //	函 数 名 : getDateTime
    //	函数功能 : 以DateTime形式返回日期时间
    //	备    注 :
    //	返 回 值 : DateTime，参见DateTime.h
    //	参数说明 :
    ///////////////////////////////////////////////////////////////
    DateTime getDateTime() ;
protected:
    ///////////////////////////////////////////////////////////////
    //	函 数 名 : setDateTime
    //	函数功能 : 将struct tm值转换成日期时间
    //	备    注 :
    //	返 回 值 : void
    //	参数说明 : struct tm & dateTime
    ///////////////////////////////////////////////////////////////
    void setDateTime(struct tm & dateTime);
private:
    struct tm _dateTime;
};

#endif //__UTIL_CALENDAR_H__
